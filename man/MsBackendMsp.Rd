% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MsBackendMsp.R
\name{MsBackendMsp}
\alias{MsBackendMsp}
\alias{MsBackendMsp-class}
\alias{backendInitialize,MsBackendMsp-method}
\alias{spectraVariableMapping}
\title{MS data backend for msp files}
\usage{
\S4method{backendInitialize}{MsBackendMsp}(object, files, nonStop = FALSE, ..., BPPARAM = bpparam())

MsBackendMsp()

spectraVariableMapping(format = c("msp"))
}
\arguments{
\item{object}{Instance of \code{MsBackendMsp} class.}

\item{files}{\code{character} with the (full) file name(s) of the msp file(s)
from which MS/MS data should be imported.}

\item{nonStop}{\code{logical(1)} whether import should be stopped if an
xml file does not contain all required fields. Defaults to
\code{nonStop = FALSE}.}

\item{...}{Currently ignored.}

\item{BPPARAM}{Parameter object defining the parallel processing
setup to import data in parallel. Defaults to \code{BPPARAM = bpparam()}. See \code{\link[=bpparam]{bpparam()}} for more information.}
}
\description{
The \code{MsBackendMsp} class supports import of MS/MS spectra data from
files in Mascot Generic Format
(\href{http://www.matrixscience.com/help/data_file_help.html}{msp})
files. After initial import, the full MS data is kept in
memory. \code{MsBackendMsp} extends the \code{\link[=MsBackendDataFrame]{MsBackendDataFrame()}} backend
directly and supports thus the \code{\link[=applyProcessing]{applyProcessing()}} function to make
data manipulations persistent. The backend does however not
support export to msp files yet.

New objects are created with the \code{MsBackendMsp} function. The
\code{backendInitialize} method has to be subsequently called to
initialize the object and import MS/MS data from (one or more) msp
files.  Optional parameter \code{nonStop} allows to specify whether the
import returns with an error if one of the xml files lacks required
data, such as \code{mz} and \code{intensity} values (default \code{nonStop = FALSE}), or whether only affected file(s) is(are) skipped and a
warning is shown (\code{nonStop = TRUE}). Note that any other error
(such as xml import error) will abort import regardless of
parameter \code{nonStop}.
}
\examples{

## Create an MsBackendHmdbXml backend and import data from test xml files.
fls <- dir(system.file("extdata", package = "MsBackendMsp"),
    full.names = TRUE, pattern = "msp$")
be <- backendInitialize(MsBackendMsp(), fls)
be

be$msLevel
be$intensity
be$mz
}
\author{
Laurent Gatto and Johannes Rainer
}
